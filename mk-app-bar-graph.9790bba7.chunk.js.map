{"version":3,"sources":["webpack:///./apps/bar/graph/component.js","webpack:///./apps/bar/graph/action.js","webpack:///./apps/bar/graph/reducer.js"],"names":["C","props","monkeyKing","path","creator","action","option","onInit","component","injections","reduce","load","webapi","bargraph","query","response","getOption","data","metaAction","gf","toJS","title","text","subtext","tooltip","trigger","legend","toolbox","show","feature","mark","dataView","readOnly","magicType","type","restore","saveAsImage","calculable","xAxis","xAxisData","yAxis","series","name","seriesData","markPoint","markLine","config","current","o","ret","metaHandlers","reducer","init","state","initState","metaReducer","sf"],"mappings":"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","file":"mk-app-bar-graph.9790bba7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { wrapper } from 'mk-meta-engine'\r\nimport appInfo from './index'\r\n\r\n@wrapper(appInfo)\r\nexport default class C extends Component {\r\n\trender() {\r\n\t\treturn this.props.monkeyKing({ ...this.props, path: 'root' })\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./apps/bar/graph/component.js","import React from 'react'\r\nimport { action as MetaAction, AppLoader } from 'mk-meta-engine'\r\nimport config from './config'\r\n\r\nclass action {\r\n    constructor(option) {\r\n        this.metaAction = option.metaAction\r\n        this.config = config.current\r\n        this.webapi = this.config.webapi\r\n    }\r\n\r\n    onInit = ({ component, injections }) => {\r\n        this.component = component\r\n        this.injections = injections\r\n        injections.reduce('init')\r\n        this.load()\r\n\r\n    }\r\n\r\n    load = async () => {\r\n        const response = await this.webapi.bargraph.query()\r\n        this.injections.reduce('load', response)\r\n    }\r\n\r\n    getOption = () => {\r\n\r\n        const data = this.metaAction.gf('data').toJS()\r\n\r\n        return {\r\n            title: {\r\n                text: '某地区蒸发量和降水量',\r\n                subtext: '纯属虚构'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['蒸发量', '降水量']\r\n            },\r\n            toolbox: {\r\n                show: true,\r\n                feature: {\r\n                    mark: { show: true },\r\n                    dataView: { show: true, readOnly: false },\r\n                    magicType: { show: true, type: ['line', 'bar'] },\r\n                    restore: { show: true },\r\n                    saveAsImage: { show: true }\r\n                }\r\n            },\r\n            calculable: true,\r\n            xAxis: [\r\n                {\r\n                    type: 'category',\r\n                    data: data.xAxisData\r\n                }\r\n            ],\r\n            yAxis: [\r\n                {\r\n                    type: 'value'\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    name: '蒸发量',\r\n                    type: 'bar',\r\n                    data: data.seriesData[0],\r\n                    markPoint: {\r\n                        data: [\r\n                            { type: 'max', name: '最大值' },\r\n                            { type: 'min', name: '最小值' }\r\n                        ]\r\n                    },\r\n                    markLine: {\r\n                        data: [\r\n                            { type: 'average', name: '平均值' }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    name: '降水量',\r\n                    type: 'bar',\r\n                    data: data.seriesData[1],\r\n                    markPoint: {\r\n                        data: [\r\n                            { type: 'max', name: '年最高', },\r\n                            { type: 'min', name: '年最低', }\r\n                        ]\r\n                    },\r\n                    markLine: {\r\n                        data: [\r\n                            { type: 'average', name: '平均值' }\r\n                        ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nexport default function creator(option) {\r\n    const metaAction = new MetaAction(option),\r\n        o = new action({ ...option, metaAction }),\r\n        ret = { ...metaAction, ...o }\r\n\r\n    metaAction.config({ metaHandlers: ret })\r\n\r\n    return ret\r\n}\n\n\n// WEBPACK FOOTER //\n// ./apps/bar/graph/action.js","import { Map,fromJS } from 'immutable'\r\nimport { reducer as MetaReducer } from 'mk-meta-engine'\r\nimport config from './config'\r\nimport { getInitState } from './data'\r\n\r\nclass reducer {\r\n    constructor(option) {\r\n        this.metaReducer = option.metaReducer\r\n        this.config = config.current\r\n    }\r\n\r\n    init = (state, option) => {\r\n        const initState = getInitState()\r\n        return this.metaReducer.init(state, initState)\r\n    }\r\n\r\n    load = (state, response) => {\r\n        state = this.metaReducer.sf(state, 'data.xAxisData', fromJS(response.xAxisData))\r\n        state = this.metaReducer.sf(state, 'data.seriesData', fromJS(response.seriesData))\r\n        return state\r\n    }\r\n\r\n}\r\n\r\nexport default function creator(option) {\r\n    const metaReducer = new MetaReducer(option),\r\n        o = new reducer({ ...option, metaReducer })\r\n\r\n    return { ...metaReducer, ...o }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./apps/bar/graph/reducer.js"],"sourceRoot":""}